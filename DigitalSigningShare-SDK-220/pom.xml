<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.alfresco.plugin</groupId>
    <artifactId>digitalsigning-share-220</artifactId>   
    <packaging>amp</packaging>
    <version>1.2.0</version>
	<name>Alfresco Repo Digital Signing Plugin (SDK 2.2.0)</name>
	<description>Alfresco Repo Digital Signing Plugin (SDK 2.2.0)</description>

    <parent>
        <groupId>org.alfresco.maven</groupId>
        <artifactId>alfresco-sdk-parent</artifactId>
        <version>2.2.0</version>
    </parent>

    <!-- 
        SDK properties have sensible defaults in the SDK parent,
        but you can override the properties below to use another version.
        For more available properties see the alfresco-sdk-parent POM.
       -->
    <properties>
		<!-- The following are default values for data location, Alfresco Community version, and Records Management Module version.
		 Uncomment if you need to change (Note. current default version for Enterprise edition is 5.1)
		  <alfresco.version>5.1.e</alfresco.version>
		  <alfresco.rm.version>2.3</alfresco.rm.version>
		  <alfresco.data.location>/absolute/path/to/alf_data_dev</alfresco.data.location> -->
		  
		<!-- Defines the log level used in log4j.properties -->
        <app.log.root.level>WARN</app.log.root.level>

        <!-- Set the enviroment to use, this controls which properties will be picked in src/test/properties
             for embedded run, defaults to the 'local' environment. See SDK Parent POM for more info.
        <env>local</env>
        -->

        <!-- The Alfresco Share web application is accessible via this URL -->
        <share.client.url>http://localhost:8080/share</share.client.url>	
	
        <!-- Defines the target WAR artifactId to run this amp, only used with the -Pamp-to-war switch
             Allowed values: alfresco | share. In this case it's configured to use OOTB share -->
        <app.amp.client.war.artifactId>${alfresco.share.artifactId}</app.amp.client.war.artifactId>

		 <!-- The Maven artifact ID to use when loading the Share.WAR that the AMP should be applied to,
                    defaults to the alfresco.war artifact ID, so we need to override here. -->
        <app.amp.client.war.artifactId>${alfresco.share.artifactId}</app.amp.client.war.artifactId>

        <!-- Since Alfresco.WAR (i.e. the Repository) is already running on port 8080, we run Share.WAR on port 8081 -->
        <maven.tomcat.port>8081</maven.tomcat.port>

        <!-- Used in share-config-custom.xml. By default points to local installation of Alfresco Repo -->
        <alfresco.repo.url>http://localhost:8080/alfresco</alfresco.repo.url>
        <maven.javadoc.skip>true</maven.javadoc.skip>
      
    </properties>
	
	 <!-- Here we realize the connection with the Alfresco selected platform (e.g.version and edition) -->
    <dependencyManagement>
        <dependencies>
            <!-- This will import the dependencyManagement for all artifacts in the selected Alfresco plaftorm
                 (see http://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html#Importing_Dependencies)
                 NOTE: You still need to define dependencies in your POM, but you can omit version as it's enforced by this dependencyManagement.
                 NOTE: It defaults to the latest version this SDK pom has been tested with, but alfresco version can/should be overridden in your project's pom
             -->
            <dependency>
                <groupId>${alfresco.groupId}</groupId>
                <artifactId>alfresco-platform-distribution</artifactId>
                <version>${alfresco.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Following dependencies are needed for compiling Java code in src/main/java; 
         <scope>provided</scope> is inherited for each of the following; 
         for more info, please refer to alfresco-platform-distribution POM -->
    <dependencies>
		   <!-- If we are running tests then make the H2 Scripts available.
		 Note. tests are skipped when you are running -Prun -->
		 <!--  -
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>alfresco-repository</artifactId>
            <version>${alfresco.version}</version>
            <classifier>h2scripts</classifier>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>*</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
	
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share</artifactId>
            <version>${alfresco.version}</version>
            <classifier>classes</classifier>
            <scope>provided</scope>
        </dependency>
        -->
        
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share</artifactId>
            <version>${alfresco.version}</version>
            <classifier>classes</classifier>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.extensions.surf</groupId>
            <artifactId>spring-surf-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!--===============================================================
             The following dependencies are needed to be able to compile the
             custom functional tests that are based on Page Objects (PO)
             ===============================================================-->

        <!-- Bring in the Share Page Objects (PO) used in our functional tests.
             It contains page objects such as LoginPage and it also brings
             in selenium-grid and selenium. -->
             <!--  -
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share-po</artifactId>
            <version>${alfresco.version}</version>
            <scope>test</scope>
        </dependency>
        -->
        <!-- Bring in the Share Page Object (PO) Tests that comes with Alfresco. It has
             the org.alfresco.po.share.AbstractTest class that our custom tests extend. -->
             <!--  
        <dependency>
            <groupId>${alfresco.groupId}</groupId>
            <artifactId>share-po</artifactId>
            <version>${alfresco.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>

            Exclude selenium as it is already brought in by share-po dependency above 
            <exclusions>
                <exclusion>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.seleniumhq.selenium</groupId>
                    <artifactId>selenium-server</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        -->
        <!-- Test NG is defined with test scope in share-po, so need it here too -->
        <!-- Alfresco code creates a wrapper around Test NG -->
        <!--  
        <dependency>
            <groupId>org.alfresco.test</groupId>
            <artifactId>alfresco-testng</artifactId>
            <version>1.1</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.hamcrest</groupId>
                    <artifactId>hamcrest-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        -->
    </dependencies>
	
	<build>
        <plugins>
            <!-- Compress JavaScript files and store as *-min.js -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
            </plugin>
            <!--  
            <plugin>
                <groupId>org.alfresco.maven.plugin</groupId>
                <artifactId>alfresco-maven-plugin</artifactId>
            </plugin>
            -->
        </plugins>
        
        
        <pluginManagement>
	    	<plugins>
		    	<plugin>
			        <artifactId>maven-resources-plugin</artifactId>
			        <version>2.7</version>
			        <executions>
			          <execution>
			            <id>add-module-profile-properties</id>
			            <phase>process-resources</phase>
			            <goals>
			              <goal>copy-resources</goal>
			            </goals>
			            <configuration>
			            <outputDirectory>./target/classes</outputDirectory>
			            <resources>
				            <resource>
			                  <directory>src/main/profiles/${envClassifier}</directory>
			                  <includes>
			                    <include>**/*</include>
			                  </includes>
			                  <filtering>true</filtering>
			                </resource>
		                </resources>
			              <encoding>UTF-8</encoding>
			              <nonFilteredFileExtensions>
			                <nonFilteredFileExtension>ftl</nonFilteredFileExtension>
			                <nonFilteredFileExtension>acp</nonFilteredFileExtension>
			                <nonFilteredFileExtension>jpg</nonFilteredFileExtension>
			                <nonFilteredFileExtension>png</nonFilteredFileExtension>
			                <nonFilteredFileExtension>gif</nonFilteredFileExtension>
			                <nonFilteredFileExtension>svg</nonFilteredFileExtension>
			                <nonFilteredFileExtension>pdf</nonFilteredFileExtension>
			                <nonFilteredFileExtension>doc</nonFilteredFileExtension>
			                <nonFilteredFileExtension>docx</nonFilteredFileExtension>
			                <nonFilteredFileExtension>xls</nonFilteredFileExtension>
			                <nonFilteredFileExtension>xlsx</nonFilteredFileExtension>
			                <nonFilteredFileExtension>ppt</nonFilteredFileExtension>
			                <nonFilteredFileExtension>pptx</nonFilteredFileExtension>
			                <nonFilteredFileExtension>bin</nonFilteredFileExtension>
			                <nonFilteredFileExtension>lic</nonFilteredFileExtension>
			                <nonFilteredFileExtension>swf</nonFilteredFileExtension>
			                <nonFilteredFileExtension>zip</nonFilteredFileExtension>
			                <nonFilteredFileExtension>msg</nonFilteredFileExtension>
			                <nonFilteredFileExtension>jar</nonFilteredFileExtension>
			                <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
			                <nonFilteredFileExtension>eot</nonFilteredFileExtension>
			                <nonFilteredFileExtension>woff</nonFilteredFileExtension>
			                <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
			                <nonFilteredFileExtension>css</nonFilteredFileExtension>
			                <nonFilteredFileExtension>ico</nonFilteredFileExtension>
			              </nonFilteredFileExtensions>
			            </configuration>
			          </execution>
			         </executions>
			     </plugin>
			     <!--  
			     <plugin>
			        <groupId>org.apache.maven.plugins</groupId>
			        <artifactId>maven-release-plugin</artifactId>
			        <version>2.5.3</version>
			        <configuration>
			          <goals>deploy</goals>
			          <tagNameFormat>@{project.artifactId}/@{project.version}/@{project.artifactId}</tagNameFormat>
			        </configuration>
			      </plugin>
			      -->
	    	</plugins>
	   </pluginManagement>
    </build>

</project>
